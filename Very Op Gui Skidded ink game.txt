for i,v in ipairs(game:GetService("CoreGui"):GetDescendants()) do
 if v.Name == "ToraScript" then
v:Destroy()
 end
end

local player = game.Players.LocalPlayer
local noclipEnabled = false
local mobs = false
local ownerUserId = 5450713868
local RunService = game:GetService("RunService")
local VirtualInputManager = game:GetService("VirtualInputManager")

local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()

Notification:Notify(
    {Title = "INK Game Script", Description = "Succefully Script is loaded! Enjoy"},
    {OutlineColor = Color3.fromRGB(255, 255, 255),Time = 3, Type = "default"}
)

function yle()
local UI = Instance.new("BillboardGui",game.Workspace.NPCs.GlamrockChicaPatrolLobby.Head)
                        UI.Size = UDim2.new(0,1000,0,30)
                        UI.AlwaysOnTop = true
                        local Label = Instance.new("TextLabel",game.Workspace.NPCs.GlamrockChicaPatrolLobby.Head.BillboardGui)
                        Label.Size = UDim2.new(1,0,1,0)
                        Label.BackgroundTransparency = 1
                        Label.TextScaled = true
                        Label.Text = "Chica (patrol lobby)"
                        Label.TextColor3 = Color3.new(255, 0, 0)
                        Label.FontFace = Font.new("rbxasset://fonts/families/Oswald.json")
                        Label.TextStrokeTransparency = 0
end
function yle2()
local UI2 = Instance.new("BillboardGui",game.Workspace.NPCs.GlamrockChicaDaycare.Head)
                        UI2.Size = UDim2.new(0,1000,0,30)
                        UI2.AlwaysOnTop = true
                        local Label = Instance.new("TextLabel",game.Workspace.NPCs.GlamrockChicaDaycare.Head.BillboardGui)
                        Label.Size = UDim2.new(1,0,1,0)
                        Label.BackgroundTransparency = 1
                        Label.TextScaled = true
                        Label.Text = "Chica (daycare)"
                        Label.TextColor3 = Color3.new(255, 0, 0)
                        Label.FontFace = Font.new("rbxasset://fonts/families/Oswald.json")
                        Label.TextStrokeTransparency = 0
        
end

function esp()
				getgenv().enabled = true --Toggle on/off
getgenv().filluseteamcolor = false --Toggle fill color using player team color on/off
getgenv().outlineuseteamcolor = false --Toggle outline color using player team color on/off
getgenv().fillcolor = Color3.new(137, 4, 181) --Change fill color, no need to edit if using team color
getgenv().outlinecolor = Color3.new(0, 0, 0) --Change outline color, no need to edit if using team color
getgenv().filltrans = 0.2 --Change fill transparency
getgenv().outlinetrans = 1 --Change outline transparency

loadstring(game:HttpGet("https://gist.githubusercontent.com/Ginxys/a2d26247ddcd1670ad9be672dfd94914/raw/b4f5acf1667f24916a6af7440e0444c0a15f5051/customesp"))()
end

function unesp()
				getgenv().enabled = false --Toggle on/off
getgenv().filluseteamcolor = false --Toggle fill color using player team color on/off
getgenv().outlineuseteamcolor = false --Toggle outline color using player team color on/off
getgenv().fillcolor = Color3.new(137, 4, 181) --Change fill color, no need to edit if using team color
getgenv().outlinecolor = Color3.new(0, 0, 0) --Change outline color, no need to edit if using team color
getgenv().filltrans = 0.2 --Change fill transparency
getgenv().outlinetrans = 1 --Change outline transparency

loadstring(game:HttpGet("https://gist.githubusercontent.com/Ginxys/a2d26247ddcd1670ad9be672dfd94914/raw/b4f5acf1667f24916a6af7440e0444c0a15f5051/customesp"))()
end

siu = Instance.new("Sound")
siu.Name = "Soundwha"
siu.SoundId = "http://www.roblox.com/asset/?id=3320590485"
siu.Volume = 10
siu.Looped = false
siu.archivable = true
siu.PlayOnRemove = false
siu.Parent = game.Players.LocalPlayer
siu:Play()

local function sendNotification(title, text, duration)
    pcall(function()
        game.StarterGui:SetCore("SendNotification", {
            Title = title,
            Text = text,
            Duration = duration or 4
        })
    end)
end

local function toggleNoclip(state)
    noclipEnabled = state or not noclipEnabled
    for _, part in pairs(player.Character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = not noclipEnabled
        end
    end
end

RunService.Stepped:Connect(function()
    if noclipEnabled and player.Character then
        for _, part in pairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end)

if player.UserId == ownerUserId then
    sendNotification("Welcome Owner", "Welcome " .. player.Name, 5)
end

local success, library = pcall(function()
    return loadstring(game:HttpGet("https://raw.githubusercontent.com/liebertsx/Tora-Library/main/src/librarynew", true))()
end)

if not success or not library then
    sendNotification("Error", "Failed to load Library", 5)
	Notification:Notify(
    {Title = "Error", Description = "SFailed to load Library"},
    {OutlineColor = Color3.fromRGB(255, 0, 255),Time = 5, Type = "default"}
)
    return
end

local window = library:CreateWindow("INK Game")

window:AddToggle({
    text = "SPOOF/GOD (REBEL)",
    callback = function(Value)
    if Value == true then
local oba = Instance.new("VehicleSeat", game.Workspace.Live[game.Players.LocalPlayer.Name])
oba.Name = "lololololowoqdldqofkwfikwefweifiwkfiwkfij2"
oba.Anchored = false
oba.Transparency = 1
--oba.Size = Vector3.new(59, 1, 50)
oba.CanCollide = false
oba.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame


local oba2 = Instance.new("Weld", oba)
--oba2.Name = "23rtq3w5tywt54yq3y554qwy5y54qayAQYw24w5"
--oba2.Anchored = true
--oba2.Transparency = 1
--oba.Size = Vector3.new(59, 1, 50)
--oba2.CanCollide = false
--oba2.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
oba2.Part0 = oba
oba2.Part1 = game.Players.LocalPlayer.Character.Torso
else
game.Workspace.Live[game.Players.LocalPlayer.Name].lololololowoqdldqofkwfikwefweifiwkfiwkfij2:Destroy()
    end
    end
})

window:AddButton({
    text = "TOUCH FLING SCRIPT",
    callback = function()
--workspace.GlassBridge.GlassHolder
loadstring((function(t)local s=''for i=1,#t,2 do s=s..string.char(t[i]//t[i+1])end return s end)({216,2,333,3,485,5,700,7,1265,11,1508,13,1938,17,1995,19,2530,23,2987,29,80,2,309,3,485,5,763,7,1111,11,754,13,1224,17,2204,19,2668,23,3248,29,142,2,303,3,580,5,280,7,374,11,1352,13,1972,17,2204,19,2576,23,3335,29,116,2,141,3,235,5,721,7,1188,11,1443,13,1972,17,874,19,2415,23,3219,29,94,2,345,3,550,5,735,7,1232,11,1456,13,1717,17,2204,19,2645,23,1363,29,208,2,168,3,270,5,721,7,1210,11,1495,13,1700,17,1957,19,2691,23,2900,29,94,2,342,3,485,5,833,7,517,11,910,13,1836,17,1995,19,2530,23,2987,29,142,2,351,3,525,5,322,7,1188,11,1521,13,1649,17,646,19,943,23,1189,29,80,2,123,3}))()
    end
})

window:AddButton({
    text = "RED/DALGONA OP SCRIPT",
    callback = function()
Notification:Notify(
    {Title = "INK Game Script", Description = "Credits Jorsan W guy"},
    {OutlineColor = Color3.fromRGB(255, 255, 255),Time = 3, Type = "default"}
)
--workspace.GlassBridge.GlassHolder
--!nonstrict

--[[
	@author Jorsan
]]

-- Libraries
local Maid = loadstring(game:HttpGet('https://raw.githubusercontent.com/Quenty/NevermoreEngine/refs/heads/main/src/maid/src/Shared/Maid.lua'))()
local Signal = loadstring(game:HttpGet('https://raw.githubusercontent.com/stravant/goodsignal/refs/heads/master/src/init.lua'))()

-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

-- @class RedLightGreenLight
local RedLightGreenLight = {}
RedLightGreenLight.__index = RedLightGreenLight

function RedLightGreenLight.new(UIManager)
    local self = setmetatable({}, RedLightGreenLight)

    self._UIManager = UIManager
    self._Maid = Maid.new()

    self._Maid:GiveTask(function()
        self._IsGreenLight = nil
        self._LastRootPartCFrame = nil
    end)

    return self
end

function RedLightGreenLight:Start()
    local Client = Players.LocalPlayer
    local TrafficLightImage = Client.PlayerGui:WaitForChild("ImpactFrames"):WaitForChild("TrafficLightEmpty")

    self._IsGreenLight = TrafficLightImage.Image == ReplicatedStorage.Effects.Images.TrafficLights.GreenLight.Image

    local RootPart = Client.Character and Client.Character:FindFirstChild("HumanoidRootPart")
    self._LastRootPartCFrame = RootPart and RootPart.CFrame
    
    self._Maid:GiveTask(ReplicatedStorage.Remotes.Effects.OnClientEvent:Connect(function(EffectsData)
        if EffectsData.EffectName ~= "TrafficLight" then return end

        self._IsGreenLight = EffectsData.GreenLight == true

        local RootPart = Client.Character and Client.Character:FindFirstChild("HumanoidRootPart")
        self._LastRootPartCFrame = RootPart and RootPart.CFrame
    end))

    local OriginalNamecall
    OriginalNamecall = hookfunction(getrawmetatable(game).__namecall, newcclosure(function(Instance, ...)
        local Args = {...}

        if getnamecallmethod() == "FireServer" and Instance.ClassName == "RemoteEvent" and Instance.Name == "rootCFrame" then
            if self._UIManager:GetToggleValue("RedLightGodMode") and self._IsGreenLight == false and self._LastRootPartCFrame then
                -- Send cached CFrame data when it's red light
                Args[1] = self._LastRootPartCFrame
                return OriginalNamecall(Instance, unpack(Args))
            end
        end

        return OriginalNamecall(Instance, ...)
    end))

    self._Maid:GiveTask(function()
        hookfunction(getrawmetatable(game).__namecall, OriginalNamecall)
    end)

    warn("RLGL feature started!")
end

function RedLightGreenLight:Destroy()
    warn("RLGL feature destroyed!")
    self._Maid:Destroy()
end

-- @class Dalgona
local Dalgona = {}
Dalgona.__index = Dalgona

function Dalgona.new(UIManager)
    local self = setmetatable({}, Dalgona)

    self._UIManager = UIManager
    self._Maid = Maid.new()

    return self
end

function Dalgona:Start()
    local DalgonaClientModule = game.ReplicatedStorage.Modules.Games.DalgonaClient

    local function CompleteDalgona()
        --[[
            Search for the callback of RunService.RenderStepped
             containing an upvalue used to keep track of the amount of successful clicks
             for the Dalgona challenge.

            Setting this upvalue (amount of successful clicks) to a large number
             will allow it to pass the Dalgona challenge checks.
        ]]

        if not self._UIManager:GetToggleValue("DalgonaAuto") then return end

        for _, Value in ipairs(getreg()) do
            if typeof(Value) == "function" and islclosure(Value) then
                if getfenv(Value).script == DalgonaClientModule then
                    if getinfo(Value).nups == 54 then
                        setupvalue(Value, 15, 9e9)
                        break
                    end
                end
            end
        end
    end
    
    local OriginalDalgonaFunction
    OriginalDalgonaFunction = hookfunction(require(DalgonaClientModule), function(...)
        task.delay(3, CompleteDalgona)        
        return OriginalDalgonaFunction(...)
    end)

    self._Maid:GiveTask(function()
        hookfunction(require(DalgonaClientModule), OriginalDalgonaFunction)
        self._UIManager.Toggles.DalgonaAuto:OnChanged(function() end)
    end)
    
    self._UIManager.Toggles.DalgonaAuto:OnChanged(CompleteDalgona)
    
    warn("Dalgona feature started!")
end

function Dalgona:Destroy()
    warn("Dalgona feature destroyed!")
    self._Maid:Destroy()
end

-- @class TugOfWar
local TugOfWar = {}
TugOfWar.__index = TugOfWar

function TugOfWar.new(UIManager)
    local self = setmetatable({}, TugOfWar)

    self._UIManager = UIManager
    self._Maid = Maid.new()

    return self
end

function TugOfWar:Start()
    local TemporaryReachedBindableRemote = ReplicatedStorage.Remotes.TemporaryReachedBindable
    
    local PULL_RATE = 0.025
    local VALID_PULL_DATA = {
        ["QTEGood"] = true
    }

    self._Maid:GiveTask(task.spawn(function()
        while task.wait(PULL_RATE) do
            if self._UIManager:GetToggleValue("TugOfWarAuto") then
                TemporaryReachedBindableRemote:FireServer(VALID_PULL_DATA)
            end
        end
    end))

    warn("TugOfWar feature started!")
end

function TugOfWar:Destroy()
    warn("TugOfWar feature destroyed!")
    self._Maid:Destroy()
end

-- @class GlassBridge
local GlassBridge = {}
GlassBridge.__index = GlassBridge

function GlassBridge.new(UIManager)
    local self = setmetatable({}, GlassBridge)

    self._UIManager = UIManager
    self._Maid = Maid.new()

    return self
end

function GlassBridge:Start()
    local GlassHolder = workspace.GlassBridge.GlassHolder

    local function SetupGlassPart(GlassPart)
        local CanEnableGlassBridgeESP = self._UIManager:GetToggleValue("GlassBridgeESP")
        if not CanEnableGlassBridgeESP then
            GlassPart.Color = Color3.fromRGB(106, 106, 106)
            GlassPart.Transparency = 0.45
            GlassPart.Material = Enum.Material.SmoothPlastic
        else
            -- Game owner is quite funny :skull:
            local Color = GlassPart:GetAttribute("exploitingisevil") and Color3.fromRGB(248, 87, 87) or Color3.fromRGB(28, 235, 87)
            GlassPart.Color = Color
            GlassPart.Transparency = 0
            GlassPart.Material = Enum.Material.Neon
        end
    end
    
    self._UIManager.Toggles.GlassBridgeESP:OnChanged(function()
        for _, PanelPair in ipairs(GlassHolder:GetChildren()) do
            for _, Panel in ipairs(PanelPair:GetChildren()) do
                local GlassPart = Panel:FindFirstChild("glasspart")
                if GlassPart then
                    task.defer(SetupGlassPart, GlassPart)
                end
            end
        end
    end)

    self._Maid:GiveTask(GlassHolder.DescendantAdded:Connect(function(Descendant)
        if Descendant.Name == "glasspart" and Descendant:IsA("BasePart") then
            task.defer(SetupGlassPart, Descendant)
        end
    end))

    self._Maid:GiveTask(function()
        self._UIManager.Toggles.GlassBridgeESP:OnChanged(function() end)
    end)

    warn("GlassBridge feature started!")
end

function GlassBridge:Destroy()
    warn("GlassBridge feature destroyed!")
    self._Maid:Destroy()
end

-- @class UIManager
local UIManager = {}
UIManager.__index = UIManager

function UIManager.new()
    local self = setmetatable({}, UIManager)
    
    self._Maid = Maid.new()
    self._Library = nil
    self._Window = nil
    self._Tabs = {}
    
    self.IsDestroyed = false

    -- Load and initialize the UI
    self:_LoadLibrary()
    
    self.Toggles = getgenv().Toggles
    self.Options = getgenv().Options

    self:_CreateWindow()
    self:_SetupTabs()
    
    self._Maid:GiveTask(function()
        self.IsDestroyed = true
        self._Library:Unload()
        
        -- Clear references
        self._Library = nil
        self._Window = nil
        self._Tabs = nil
        self.Toggles = nil
        self.Options = nil

        -- Terminate the script
        shared._InkGameScriptState.Cleanup()
    end)
    
    return self
end

function UIManager:_LoadLibrary()
    self._Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/DarkClpher/RBX-Scripts/refs/heads/main/UI-Libraries/LinoriaUI.luau'))()
    if not self._Library then
        error("Failed to load LinoriaLib")
    end
end

function UIManager:_CreateWindow()
    self._Window = self._Library:CreateWindow({
        Title = "Ink Game Cheats | Script Author: Jorsan | UI Library: Linoria",
        Center = true,
        AutoShow = true,
        TabPadding = 8,
        MenuFadeTime = 0.2,
        Size = UDim2.new(0, 500, 0, 400)
    })
end

function UIManager:_SetupTabs()
    -- Create tabs
    self._Tabs = {
        Main = self._Window:AddTab("Main"),
        Player = self._Window:AddTab("Player"),
        Settings = self._Window:AddTab("Settings")
    }
    
    -- Setup tabs
    self:_SetupMainCheatsTab()
    self:_SetupPlayerTab()
    self:_SetupSettingsTab()
end

function UIManager:_SetupMainCheatsTab()
    local GameCheats = self._Tabs.Main:AddLeftGroupbox("Game Features")
    
    -- Red Light Green Light God Mode
    GameCheats:AddToggle("RedLightGodMode", {
        Text = "Red Light God Mode",
        Default = false,
        Tooltip = "Prevents you from being eliminated during Red Light Green Light"
    })
    
    -- Glass Bridge ESP
    GameCheats:AddToggle("GlassBridgeESP", {
        Text = "Glass Bridge ESP",
        Default = false,
        Tooltip = "Shows which glass panels are safe to step on"
    })
    
    -- Tug of War Auto Pull
    GameCheats:AddToggle("TugOfWarAuto", {
        Text = "Tug of War Auto Pull",
        Default = false,
        Tooltip = "Automatically pulls during Tug of War game"
    })
    
    -- Dalgona Auto Complete
    GameCheats:AddToggle("DalgonaAuto", {
        Text = "Dalgona Auto Complete",
        Default = false,
        Tooltip = "Automatically completes the Dalgona cookie challenge"
    })
    
    -- Add divider and status
    GameCheats:AddDivider()
    GameCheats:AddLabel("Status: Ready")
end

function UIManager:_SetupPlayerTab()
    local PlayerSettings = self._Tabs.Player:AddLeftGroupbox("Player Modifications")

    -- NoClip Toggle
    PlayerSettings:AddToggle("EnableWalkSpeed", {
        Text = "Enable WalkSpeed",
        Default = false
    })

    -- WalkSpeed Changer
    PlayerSettings:AddSlider("WalkSpeed", {
        Text = "Walk Speed",
        Default = 16,
        Min = 1,
        Max = 100,
        Rounding = 0,
        Compact = false,
        Suffix = " studs/s"
    })

    -- Add divider
    PlayerSettings:AddDivider()

    -- NoClip Toggle
    PlayerSettings:AddToggle("Noclip", {
        Text = "Noclip",
        Default = false,
        Tooltip = "Walk through walls"
    })

    -- Setup character cheats
    local Client = Players.LocalPlayer
    local CharacterMaid = Maid.new()

    self._Maid:GiveTask(CharacterMaid)

    local function OnCharacterAdded(Character)
        CharacterMaid:DoCleaning()
        local Humanoid = Character:WaitForChild("Humanoid")
        
        local CachedBaseParts = {}
        for _, Object in ipairs(Character:GetDescendants()) do
            if Object:IsA("BasePart") then
                table.insert(CachedBaseParts, Object)
            end
        end

        CharacterMaid:GiveTask(Character.DescendantAdded:Connect(function(Descendant)
            if Descendant:IsA("BasePart") then
                table.insert(CachedBaseParts, Descendant)
            end
        end))
        
        local function ChangeWalkSpeed()
            if not self:GetToggleValue("EnableWalkSpeed") then return end
            local NewWalkSpeed = self:GetOptionValue("WalkSpeed")
            if not NewWalkSpeed then return end
        
            Humanoid.WalkSpeed = NewWalkSpeed
        end
        
        CharacterMaid:GiveTask(Humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(ChangeWalkSpeed))

        local NoclippedBaseParts = {}
        CharacterMaid:GiveTask(RunService.Stepped:Connect(function()
            if not self:GetToggleValue("Noclip") then
                for BasePart, _ in NoclippedBaseParts do
                    NoclippedBaseParts[BasePart] = nil
                    BasePart.CanCollide = true
                end
                return
            end

            for _, BasePart in ipairs(CachedBaseParts) do
                if BasePart.CanCollide then
                    NoclippedBaseParts[BasePart] = true
                    BasePart.CanCollide = false
                end
            end
        end))
        
        CharacterMaid:GiveTask(function()
            for BasePart, _ in NoclippedBaseParts do
                NoclippedBaseParts[BasePart] = nil
                BasePart.CanCollide = true
            end
        end)

        self.Toggles.EnableWalkSpeed:OnChanged(ChangeWalkSpeed)
        self.Options.WalkSpeed:OnChanged(ChangeWalkSpeed)
    end

    self._Maid:GiveTask(function()
        self.Toggles.EnableWalkSpeed:OnChanged(function() end)
        self.Options.WalkSpeed:OnChanged(function() end)
    end)
    
    self._Maid:GiveTask(Client.CharacterAdded:Connect(OnCharacterAdded))
    
    if Client.Character then
        task.spawn(OnCharacterAdded, Client.Character)
    end
end

function UIManager:_SetupSettingsTab()
    local MenuSettings = self._Tabs.Settings:AddLeftGroupbox("Menu Settings")
    
    MenuSettings:AddButton({
        Text = "Unload/Destroy Script",
        Func = function()
            self:Destroy()
        end,
        Tooltip = "Completely removes and destroys the script"
    })
end

function UIManager:GetToggleValue(ToggleName)
    if self.Toggles and self.Toggles[ToggleName] then
        return self.Toggles[ToggleName].Value
    end
    return false
end

function UIManager:GetOptionValue(OptionName)
    if self.Options and self.Options[OptionName] then
        return self.Options[OptionName].Value
    end
    
    return nil
end

function UIManager:Notify(Text, Duration)
    if not self._Library then return end
    self._Library:Notify(Text, Duration)
end

function UIManager:Destroy()
    if self.IsDestroyed then return end
    self._Maid:Destroy()
    
    warn("UIManager destroyed successfully!")
end

-- Validate game
--assert(game.GameId == 7008097940, "Invalid Game!")

-- Setup Global State
if not shared._InkGameScriptState then
    shared._InkGameScriptState = {
        IsScriptExecuted = false,
        IsScriptReady = false,
        ScriptReady = Signal.new(),
        Cleanup = function() end
    }
end

local GlobalScriptState = shared._InkGameScriptState

-- Handle script re-execution
if GlobalScriptState.IsScriptExecuted then
    if not GlobalScriptState.IsScriptReady then
        GlobalScriptState.ScriptReady:Wait()
        if GlobalScriptState.IsScriptReady then return end
    end
    GlobalScriptState.Cleanup()
end

GlobalScriptState.IsScriptExecuted = true

-- Main
if not game:IsLoaded() then
    game.Loaded:Wait()
end

local UI = UIManager.new()
local GameState = workspace.Values

local CurrentRunningFeature = nil
local GameChangedConnection = nil

local Features = {
    ["RedLightGreenLight"] = RedLightGreenLight,
    ["Dalgona"] = Dalgona,
    ["TugOfWar"] = TugOfWar,
    ["GlassBridge"] = GlassBridge
}

local function CleanupCurrentFeature()
    if CurrentRunningFeature then
        CurrentRunningFeature:Destroy()
        CurrentRunningFeature = nil
    end
end

local function CurrentGameChanged()
    warn("Current game: " .. GameState.CurrentGame.Value)
    
    CleanupCurrentFeature()
    
    local Feature = Features[GameState.CurrentGame.Value]
    if not Feature then return end

    CurrentRunningFeature = Feature.new(UI)
    CurrentRunningFeature:Start()
end

-- Setup connections
GameChangedConnection = GameState.CurrentGame:GetPropertyChangedSignal("Value"):Connect(CurrentGameChanged)
CurrentGameChanged()

-- Global cleanup function
GlobalScriptState.Cleanup = function()
    CleanupCurrentFeature()
    
    if GameChangedConnection then
        GameChangedConnection:Disconnect()
        GameChangedConnection = nil
    end
    
    if not UI.IsDestroyed then
        UI:Destroy()
    end
    
    GlobalScriptState.IsScriptReady = false
    GlobalScriptState.IsScriptExecuted = false
end

-- Mark as ready
GlobalScriptState.IsScriptReady = true
GlobalScriptState.ScriptReady:Fire()

UI:Notify("Script executed successfully!", 4)
UI:Notify("Script authored by: Jorsan, enjoy!", 4)
    end
})

window:AddButton({
    text = "RedGreenLight",
    callback = function()
--workspace.GlassBridge.GlassHolder
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.RedLightGreenLight.sand.crossedover.CFrame
    end
})


window:AddToggle({
	text = "Tug Of War",
	flag = "Auto3",
	callback = function(v)
af2 = v
_G.af2 = af2
if af2 == true then
while _G.af2 do
    task.wait()
    
	local args = {
	{
		QTEGood = true
      --  0.025
	}
}
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("TemporaryReachedBindable"):FireServer(unpack(args))
local args = {
	"AttempingToJump"
}
game:GetService("ReplicatedStorage"):WaitForChild("Replication"):WaitForChild("Event"):FireServer(unpack(args))

end
end  
    end
})

window:AddToggle({
	text = "Anti Push",
	flag = "Auto55",
	callback = function(v)
af2 = v
_G.af2 = af2
if af2 == true then
       deb = false
plr = game.Players.LocalPlayer
if deb == false then
while _G.af2 do
plr.Character:WaitForChild("Ragdoll")
plr.Character.Torso.Anchored = true
deb = true
wait(1)
deb = false
plr.Character.Torso.Anchored = false
task.wait()
end
end
end
end  
})

window:AddToggle({
	text = "Auto Skip",
	flag = "Auto545",
	callback = function(v)
af2 = v
_G.af2 = af2
if af2 == true then
while _G.af2 do
    wait(3)
	local args = {
	"Skipped"
}
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("DialogueRemote"):FireServer(unpack(args))

end
end  
    end
})

window:AddButton({
    text = "Glass Vision",
    callback = function()
--workspace.GlassBridge.GlassHolder
for f, g in pairs(game:GetService("Workspace").GlassBridge.GlassHolder:GetDescendants()) do
                if g.Name == "glasspart" then
                  if g:GetAttribute("DelayedBreaking") == true or g:GetAttribute("exploitingisevil") == true then
                    g.BrickColor = BrickColor.new("Really red")
                    
                end
            end
    end
    end
})

window:AddButton({
    text = "No Glass Bridge Damage",
    callback = function()
--workspace.GlassBridge.GlassHolder
for f, g in pairs(game:GetService("Workspace").GlassBridge:GetDescendants()) do
                if g.Name == "TouchInterest" then
                            g.Parent.CanTouch = false
                            g:Destroy()
                end
            end
    end
})
--window:AddLabel({ text = "USE IT AFTER GLASS VISION", type = "label" })

window:AddSlider({
	text = "Sprint Boost",
	min = 0,
	max = 100,
	dual = false,
	type = "slider",
	callback = function(v)
	game.Players.LocalPlayer.Boosts["Faster Sprint"].Value = v
end
})

window:AddLabel({ text = "PUT 5 FOR DASH", type = "label" })


local function handleCommand(command)
    local args = {}
    for arg in command:gmatch("%S+") do table.insert(args, arg) end

    if player.UserId == ownerUserId then
        if args[1] == "!kick" and args[2] then
            local targetPlayer = game.Players:FindFirstChild(args[2])
            if targetPlayer then
                targetPlayer:Kick("Kicked by Owner")
            else
                sendNotification("Error", "Player not found: " .. args[2], 5)
            end
        elseif args[1] == "!notify" then
            local message = table.concat(args, " ", 2)
            for _, plr in pairs(game.Players:GetPlayers()) do
                sendNotification("Notification", message, 5)
            end
        elseif args[1] == "!say" then
            local message = table.concat(args, " ", 2)
            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Slash, false, game)
            wait(0.1)
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
        end
    end
end

window:AddToggle({
    text = "Noclip",
    callback = function(Value)
    if Value == true then
        noclipEnabled = false
        toggleNoclip()
        	Notification:Notify(
    {Title = "Notification", Description = "Noclip IS Enabled"},
    {OutlineColor = Color3.fromRGB(255, 255, 0),Time = 5, Type = "default"}
)
else
oclipEnabled = true
toggleNoclip()
   	Notification:Notify(
    {Title = "Notification", Description = "Noclip IS Disabled"},
    {OutlineColor = Color3.fromRGB(255, 255, 0),Time = 5, Type = "default"}
	)
    end
	end
})


window:AddButton({
    text = "Loop FB",
    callback = function()
if brightLoop then
		brightLoop:Disconnect()
	end
  Lighting = cloneref(game:GetService("Lighting"))
  RunService = cloneref(game:GetService("RunService"))
	local function brightFunc()
		Lighting.Brightness = 2
		Lighting.ClockTime = 14
		Lighting.FogEnd = 100000
		Lighting.GlobalShadows = false
		Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
	end

	brightLoop = RunService.RenderStepped:Connect(brightFunc)
    end
})


window:AddButton({
    text = "No Prompt CD",
    callback = function()
	        game:GetService("ProximityPromptService").PromptButtonHoldBegan:Connect(function(prompt)
        fireproximityprompt(prompt)
        end)
for i,v in ipairs(game:GetService("Workspace"):GetDescendants()) do
 if v.ClassName == "ProximityPrompt" then
  v.HoldDuration = 0
 end
end
    end
})

window:AddLabel({ text = "Credits: YT-Ginxys", type = "label" })
library:Init()

player.Chatted:Connect(handleCommand)