everyClipboard = setclipboard or toclipboard or set_clipboard or (Clipboard and Clipboard.set)
local gui,GazerMain,GazerTitle,TextBax,chat,coreGay,cloneref



everyClipboard([[
SD Team stolled source script! pls share this script to your friends!:
"https://discord.gg/Np6GkPUKGG"]])
task.wait(0.1)
print("Join in!")



function bypass(input)
local NUMBER,LOWER
NUMBER = { ["0"] = "\xEF\xBC\x90", ["1"] = "\xEF\xBC\x91", ["2"] = "\xEF\xBC\x92", ["3"] = "\xEF\xBC\x93", ["4"] = "\xEF\xBC\x94", ["5"] = "\xEF\xBC\x95", ["6"] = "\xEF\xBC\x96", ["7"] = "\xEF\xBC\x97", ["8"] = "\xEF\xBC\x98", ["9"] = "\xEF\xBC\x99" }
LOWER = input:lower()
local result = LOWER:gsub("%d", 

function(digit)
return NUMBER[digit] or digit
end)

result = result:gsub("i", "á»‹\u{0325}")
result = result:gsub("a", "a\u{030A}")
result = result:gsub("e", "e\u{030A}")
result = result:gsub("o", "o\u{030A}")
result = result:gsub(" ", "\b")
result = result:gsub("u", "u\u{0325}")
result = result:gsub("|", "\r")

local A_1 = result
local A_2 = "All"

    if game:GetService("TextChatService"):FindFirstChild("TextChannels") then
        game:GetService("TextChatService").TextChannels.RBXGeneral:SendAsync(A_1)
    else
        game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer( A_1, A_2)
    end
end
    

    
    
    


cloneref = cloneref or function(o) return o end

 coreGay = cloneref(game:GetService("CoreGui"))
 gui = Instance.new("ScreenGui")
 GazerMain = Instance.new("Frame")
 GazerTitle = Instance.new("TextLabel")
 TextBax = Instance.new("TextBox")
 chat = Instance.new("TextButton")


gui.Name = "GazerGui"
gui.Parent = coreGay
GazerMain.Size = UDim2.new(0.5, 0, 0.5, 0)
GazerMain.Position = UDim2.new(0.25, 0, 0.25, 0)
GazerMain.BackgroundColor3 = Color3.new(1, 1, 1)
GazerMain.BorderColor3 = Color3.new(0, 0, 0)
GazerMain.BorderSizePixel = 1
GazerMain.Active = true 

GazerMain.Parent = gui
GazerTitle.Size = UDim2.new(1, 0, 0.2, 0)
GazerTitle.Position = UDim2.new(0, 0, 0, 0)
GazerTitle.BackgroundColor3 = Color3.new(0, 0, 0)
GazerTitle.BorderColor3 = Color3.new(0, 0, 0)
GazerTitle.BorderSizePixel = 1
GazerTitle.Text = "Gaze Bypass (Tutorial needed)"
GazerTitle.TextSize = 14
GazerTitle.TextColor3 = Color3.new(1, 1, 1)
GazerTitle.Font = Enum.Font.Bodoni
GazerTitle.Parent = GazerMain
TextBax.Size = UDim2.new(0.8, 0, 0.2, 0)
TextBax.Position = UDim2.new(0.1, 0, 0.3, 0)
TextBax.BackgroundColor3 = Color3.new(0, 0, 0)
TextBax.BorderColor3 = Color3.new(0, 0, 0)
TextBax.BorderSizePixel = 1
TextBax.PlaceholderText = "(Chat)"
TextBax.TextColor3 = Color3.new(1, 1, 1)
TextBax.Font = Enum.Font.Code
TextBax.Text = ""
TextBax.TextSize = 15
TextBax.Parent = GazerMain
chat.Size = UDim2.new(0.3, 0, 0.2, 0)
chat.Position = UDim2.new(0.35, 0, 0.7, 0)
chat.BackgroundColor3 = Color3.new(0, 0, 0)
chat.BorderColor3 = Color3.new(0, 0, 0)
chat.BorderSizePixel = 1
chat.Text = "Chat"
chat.TextSize = 14
chat.TextColor3 = Color3.new(1, 1, 1)
chat.Font = Enum.Font.Code
chat.Parent = GazerMain







chat.MouseButton1Click:Connect(function()
    local inputString = TextBax.Text
    bypass(inputString)
end)




local TweenService = game:GetService("TweenService")
local frame = GazerMain
frame.Visible = true
frame.Size = UDim2.new(0.4, 0, 0.4, 0) 
frame.Position = UDim2.new(0.5, 0, 0.7, 0) 
frame.AnchorPoint = Vector2.new(0.5, 0.5)
frame.BackgroundTransparency = 1 
local targetPosition = UDim2.new(0.5, 0, 0.5, 0) 
local targetSize = UDim2.new(0.5, 0, 0.5, 0) 
local targetTransparency = 0 
local tweenInfo = TweenInfo.new(
1, -- Duration (in seconds)
Enum.EasingStyle.Quad, 
Enum.EasingDirection.Out)
local positionTween = TweenService:Create(frame, tweenInfo, {Position = targetPosition})
local sizeTween = TweenService:Create(frame, tweenInfo, {Size = targetSize})
local transparencyTween = TweenService:Create(frame, tweenInfo, {BackgroundTransparency = targetTransparency})
positionTween:Play()
sizeTween:Play()
transparencyTween:Play()
local TS = game:GetService("TweenService")
local UIS = game:GetService("UserInputService")
function dragify(Frame)
local dragToggle = nil
local dragInput = nil
local dragStart = nil
local startPos = nil
local function updateInput(input)
local Delta = input.Position - dragStart
local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X,
startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
TS:Create(Frame, TweenInfo.new(0.3), {Position = Position}):Play()
end
Frame.InputBegan:Connect(function(input)
if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and UIS:GetFocusedTextBox() == nil then
	dragToggle = true
	dragStart = input.Position
	startPos = Frame.Position
	input.Changed:Connect(function()
		if input.UserInputState == Enum.UserInputState.End then
			dragToggle = false
		end
	end)
end
end)
Frame.InputChanged:Connect(function(input)
if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
	dragInput = input
end
end)
UIS.InputChanged:Connect(function(input)
if input == dragInput and dragToggle then
	updateInput(input)
end
end)
end



dragify(GazerMain)