--[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()
local Window = Library:NewWindow("Fake Chat UI")
local Section = Window:NewSection("Command Bar")

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TextChatService = game:GetService("TextChatService")
local ChatService = game:GetService("Chat")
local LocalPlayer = Players.LocalPlayer

local setthreadlevel = syn and syn.set_thread_identity or set_thread_identity or setidentity or setthreadidentity
local getthreadlevel = syn and syn.get_thread_identity or get_thread_identity or getidentity or getthreadidentity

local NAME_COLORS = {
	Color3.fromRGB(253, 41, 67),
	Color3.fromRGB(1, 162, 255),
	Color3.fromRGB(2, 184, 87),
	BrickColor.new("Bright violet").Color,
	BrickColor.new("Bright orange").Color,
	BrickColor.new("Bright yellow").Color,
	BrickColor.new("Light reddish violet").Color,
	BrickColor.new("Brick yellow").Color
}

local function GetNameValue(pName)
	local value = 0
	for i = 1, #pName do
		local c = string.byte(pName:sub(i, i))
		local r = #pName - i + 1
		if #pName % 2 == 1 then r = r - 1 end
		if r % 4 >= 2 then c = -c end
		value += c
	end
	return value
end

local function nameColor(name)
	return NAME_COLORS[(GetNameValue(name) % #NAME_COLORS) + 1]
end

local selectedPlayer = "all"
local dropdownObject

local function getDropdownList()
	local names = { "me", "others", "all" }
	for _, plr in ipairs(Players:GetPlayers()) do
		table.insert(names, plr.Name)
	end
	return names
end

local function getPlayers(str)
	str = str:lower()
	if str == "me" then return { LocalPlayer }
	elseif str == "others" then
		local t = {}
		for _, v in ipairs(Players:GetPlayers()) do
			if v ~= LocalPlayer then table.insert(t, v) end
		end
		return t
	elseif str == "all" then
		return Players:GetPlayers()
	else
		for _, p in ipairs(Players:GetPlayers()) do
			if p.Name:lower():sub(1, #str) == str then
				return { p }
			end
		end
	end
	return {}
end

local function supportsLegacy()
	local s = ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents")
	return s and s:FindFirstChild("OnMessageDoneFiltering")
end

local function fireLegacyChat(plr, msg)
	local ChatEvents = ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents")
	if not ChatEvents then return end
	local OnMessageDoneFiltering = ChatEvents:FindFirstChild("OnMessageDoneFiltering")
	if not OnMessageDoneFiltering then return end

	local old = getthreadlevel()
	setthreadlevel(4)

	local data = {
		ID = math.random(),
		FromSpeaker = plr.DisplayName,
		SpeakerUserId = plr.UserId,
		OriginalChannel = "All",
		IsFiltered = true,
		MessageLength = #msg,
		Message = msg,
		MessageType = "Message",
		Time = os.time() + 10,
		ExtraData = {
			NameColor = nameColor(plr.Name),
		}
	}

	firesignal(OnMessageDoneFiltering.OnClientEvent, data)
	setthreadlevel(old)

	if plr.Character and plr.Character:FindFirstChild("Head") then
		ChatService:Chat(plr.Character.Head, msg, Enum.ChatColor.White)
	end
end

local function fireModernChat(plr, msg)
	if plr.Character and plr.Character:FindFirstChild("Head") then
		ChatService:Chat(plr.Character.Head, msg, Enum.ChatColor.White)
	end

	local channel = TextChatService:FindFirstChild("TextChannels")
	if channel and channel:FindFirstChild("RBXGeneral") then
		channel.RBXGeneral:DisplaySystemMessage("["..plr.Name.."]: "..msg)
	elseif TextChatService:FindFirstChild("ChatInputBarConfiguration") then
		local inputConfig = TextChatService.ChatInputBarConfiguration
		local targetChannel = inputConfig.TargetTextChannel
		if targetChannel then
			targetChannel:DisplaySystemMessage("["..plr.Name.."]: "..msg)
		end
	end
end

local function fakeChat(plr, msg)
	if supportsLegacy() then
		fireLegacyChat(plr, msg)
	else
		fireModernChat(plr, msg)
	end
end

dropdownObject = Section:CreateDropdown("Select Player", getDropdownList(), 3, function(text)
	selectedPlayer = text
end)

Players.PlayerAdded:Connect(function()
	dropdownObject:UpdateList(getDropdownList())
end)

Players.PlayerRemoving:Connect(function()
	dropdownObject:UpdateList(getDropdownList())
end)

local latestInput = ""

Section:CreateTextbox("Enter Message", function(text)
	latestInput = text
end)

Section:CreateButton("Send Client", function()
	if latestInput ~= "" then
		for _, p in ipairs(getPlayers(selectedPlayer)) do
			fakeChat(p, latestInput)
		end
	end
end)